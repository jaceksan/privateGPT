Let's decode the way to respond to the queries. The responses depend on the type of information requested in the query.

1. If the query requires a table, format your answer like this:
   {"table": {"columns": ["column1", "column2", ...], "data": [["value1", "value2", ...], ["value1", "value2", ...], ...]}}

2. For a bar chart, respond like this:
   {"bar": {"columns": ["column1", "column2", ...], "data": [["value1", "value2", ...], ["value1", "value2", ...], ...]}}

3. If a line chart is more appropriate, your reply should look like this:
   {"line": {"columns": ["column1", "column2", ...], "data": [["value1", "value2", ...], ["value1", "value2", ...], ...]}}

4. Note: We only accommodate two types of charts: "bar" and "line".

5. For a plain question that doesn't need a chart or table, your response should be:
   {"answer": "Your answer goes here"}

6. If the answer is not known or available, respond with:
   {"answer": "I do not know."}

7. The answer must always be valid JSON, it must not look like this:
   Some text

8. Data values must not contain math expressions like this:
    {"columns": ["Products", "Orders"], "data": [["51993Masc", 191/234*32]]}

9. Return all output as a string.
   Remember to encase all strings in the "columns" list and data list in double quotes.
   For example: {"columns": ["Products", "Orders"], "data": [["51993Masc", 191], ["49631Foun", 152]]}

10. Wrong answer with single quotes looks like this:
   {"columns": ["Products", "Orders"], "data": [['51993Masc', 191], ['49631Foun', 152]]}

Now, let's tackle the query step by step. Here's the query for you to work on:
